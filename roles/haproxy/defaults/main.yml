---
haproxy_version: 1.8.14
haproxy_port: 9000
haproxy_dir: /etc/haproxy
haproxy_dir_binary: /usr/sbin
haproxy_admin_sock: /run/haproxy_admin.sock
haproxy_stats_user: admin
haproxy_stats_pass: password
haproxy_url_install: https://github.com/jenciso/haproxy-1.8.14.binary.centos7/releases/download/v1.0.0/haproxy-{{ haproxy_version }}.binary.centos7.tar.gz
haproxy_file: "{{ haproxy_url_install | basename }}"
firewalld_disabled: true


haproxy_config_content: |
  global
        #debug                                   # uncomment to enable debug mode for HAProxy
        log /dev/log    local0
        log /dev/log    local1 notice

  stats socket {{ haproxy_admin_sock }} mode 777 level admin expose-fd listeners

        stats timeout 30s
        daemon
        maxconn 2000
        tune.ssl.default-dh-param   2048
        ssl-default-bind-ciphers    ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options    no-sslv3 no-tlsv10

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private
  
  defaults
        log global
        mode http                               # enable http mode which gives of layer 7 filtering
        retries 3
        option http-keep-alive
        option forwardfor
        option  dontlognull
        option http-server-close
        timeout connect 5000                   # max time to wait for a connection attempt to a server to succeed
        timeout client 50000                   # max inactivity time on the client side
        timeout server 50000                   # max inactivity time on the server side

  #------------------
  # internal statistics
  #------------------

  listen stats
      bind 0.0.0.0:{{ haproxy_port }}
      mode http
      stats auth {{ haproxy_stats_user }}:{{ haproxy_stats_pass }}
      stats enable
      stats realm Haproxy\ Statistics
      stats refresh 10s
      stats uri /admin?stats


  frontend webserver-80
      bind      {{ ipv4addr }}:80
      mode tcp
      default_backend webservers
 
  backend webservers
      balance roundrobin
      mode tcp
  {% for host in groups['web_servers'] -%}
  {% set count1 = loop.index %}
      server backend0{{ count1 }} {{ hostvars[host].ipv4addr }}:80 check
  {% if not loop.last -%}{%- endif -%}
  {% endfor %}
